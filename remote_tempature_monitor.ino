// –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª secrets_RENAME_ME.h –≤ secrets.h
// –ó–∞–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤ –Ω–∞ —Å–≤–æ–∏
#include "secrets.h"

#include <FastBot.h>
#include <OneWire.h>
#include <EEPROM.h>
#include <string>
#include <DallasTemperature.h>

#define ONE_WIRE_BUS 2
#define CORRECTION 3

OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature DS18B20(&oneWire);
FastBot bot(BOT_TOKEN);

float t;
bool set_limit = false;
float limit = 17;
String user = "380330296";  // –∞–π–¥–∏—à–Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –º–∞—Å—Å–∏–≤ –∏ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å 71 —Å—Ç—Ä–æ—á–∫—É)
bool send_msg = true;
String buttons = "üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞\nüîî–ü–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è";

void setup() {
  delay(5000);
  Serial.begin(115200);
  connectWiFi();

  bot.setChatID(user);
  bot.setPeriod(5000);
  DS18B20.begin();
  EEPROM.begin(100);
  bot.attach(newMsg);

  float lim = 0;
  EEPROM.get(0, lim);
  if (lim != NULL) {
    limit = lim;
  }

  sayConnected("–ù–∞ —Å–≤—è–∑–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞");
}

String infoString() {
  return ("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(t) + "¬∞C.\n" + "–£–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /get_temp –∏–ª–∏ —á–µ—Ä–µ–∑ –º–µ–Ω—é\n\n" + "–ü–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: " + String(limit) + "¬∞C\n" + "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /set_a_threshold –∏–ª–∏ —á–µ—Ä–µ–∑ –º–µ–Ω—é");
}

void sayConnected(String info) {
  getTemp();
  String s = info + "\n\n" + infoString();
  bool no_tg = false;
  while (bot.showMenuText(s, buttons) == 3) {
    no_tg = true;
    Serial.print("#");
    delay(5000);
  };
  if (no_tg == true) {
    delay(2000);
    getTemp();
    bot.sendMessage("‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –ë—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¢–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–ª—Å—è –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å " + String(t) + "¬∞C");
  }
}

void getTemp() {
  DS18B20.requestTemperatures();
  t = DS18B20.getTempCByIndex(0) - CORRECTION;
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
void newMsg(FB_msg& msg) {
  // –≤—ã–≤–æ–¥–∏–º ID —á–∞—Ç–∞, –∏–º—è —é–∑–µ—Ä–∞ –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  String id = msg.chatID;
  Serial.print(msg.chatID);  // ID —á–∞—Ç–∞
  Serial.print(", ");
  Serial.print(msg.username);  // –ª–æ–≥–∏–Ω
  Serial.print(", ");
  Serial.println(msg.text);  // —Ç–µ–∫—Å—Ç
  String send_msg1 = "";

  if (msg.text == "/get_temp" or msg.text == "üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞") {
    getTemp();
    send_msg1 = infoString();
    send_msg = true;
  } else if ((msg.text == "/set_a_threshold" or msg.text == "üîî–ü–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è") and (id == user)) {
    if (set_limit == false) {
      send_msg1 = "–°–µ–π—á–∞—Å –ø–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: " + String(limit) + "¬∞C.\n\n" + "–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ—Ä–æ–≥ (–Ω–∞–ø—Ä: 25.5)\n" + "–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /set_a_threshold –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –ø—É–Ω–∫—Ç –º–µ–Ω—é:\n" + "üîî–ü–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è";
      set_limit = true;
    } else {
      send_msg1 = "–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä–æ–≥–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è";
      set_limit = false;
    }
  } else if (set_limit == true and (id == user)) {
    float lim1 = strtof(msg.text.c_str(), NULL);
    if (lim1 != 0) {
      limit = lim1;
      EEPROM.put(0, lim1);
      EEPROM.commit();
      send_msg1 = "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: " + msg.text + "¬∞C", msg.chatID;
      send_msg = true;
      set_limit = false;
    }
  }
  bot.showMenuText(send_msg1, buttons, msg.chatID);
}

void loop() {
  float check_lim;
  if ((WiFi.status() != WL_CONNECTED)) {
    Serial.println("Disconnected from WiFi SSID " + String(WIFI_SSID));
    WiFi.disconnect();
    connectWiFi();
    sayConnected("–ù–∞ —Å–≤—è–∑–∏ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è WiFi");
  }
  EEPROM.get(0, check_lim);
  getTemp();
  if (t < check_lim and send_msg == true) {
    bool no_tg = false;
    // TODO –ó–î–ï–°–¨ –ò –í–ï–ó–î–ï –ò–ó–ú–ï–ù–Ø–¢–¨ –¢–ï–ö–°–¢, –µ—Å–ª–∏ –¢–ì –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    while (bot.sendMessage("‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∏–∂–µ " + String(limit) + "¬∞C.\n–ü—Ä–∏–µ–∑–∂–∞–π—Ç–µ –¥–æ–º–æ–π!") == 3) {
      no_tg = true;
      Serial.print("!");
    }
    if (no_tg == true) {
      getTemp();
      bot.sendMessage("‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –ë—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¢–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–ª—Å—è –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å " + String(t) + "¬∞C");
    }
    send_msg = false;
  }
  bool no_tg = false;
  while (bot.tick() == 3) {
    no_tg = true;
    Serial.print("+");
  }
  if (no_tg == true) {
    getTemp();
    bot.sendMessage("‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –ë—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¢–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–ª—Å—è –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å " + String(t) + "¬∞C");
  }
}

void connectWiFi() {
  Serial.println("\nConnecting to WiFi SSID " + String(WIFI_SSID));
  WiFi.begin(WIFI_SSID, WIFI_PASS);
  unsigned long prevMillis = millis();
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
    if (millis() - prevMillis > 60000) {
      Serial.println("\nRestarting ESP");
      ESP.restart();
    }
  }
  Serial.println("\nConnected to WiFi SSID " + String(WIFI_SSID));
}
